# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
gan-htr-env/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For PyCharm
#  Community Edition, use 'PyCharm CE'.  It is highly recommended that you do not use
#  wildcards such as .gitignore files and folders.
.idea/

# VS Code
.vscode/
*.code-workspace

# Machine Learning / AI specific ignores
# =================================

# Model weights and checkpoints
*.h5
*.hdf5
*.pkl
*.pickle
*.pt
*.pth
*.ckpt
*.pb
*.tflite
*.onnx

# Training results and logs
results/
logs/
runs/
checkpoints/
weights/
models/
saved_models/
tensorboard_logs/
tb_logs/

# Result directories (common patterns for this project)
Result*/
ResultGan*/
**/epoch*/
**/weights/

# Dataset directories (large files)
dataset/
datasets/
data/
Dataset/
KHATT/
DIBCO*/
dibco*/

# Temporary files created during training
*.tmp
*.temp
temp/
tmp/

# Image outputs and generated samples
generated/
samples/
output/
outputs/
predictions/
enhanced/

# Evaluation results
eval_results/
test_results/
metrics/

# Configuration files with sensitive information
config.json
config.yaml
config.yml
secrets.json

# Large media files
*.jpg
*.jpeg
*.png
*.bmp
*.tiff
*.tif
*.gif
*.svg
*.mp4
*.avi
*.mov
*.wmv
*.flv

# But keep example images if they exist
!example*.jpg
!example*.png
!sample*.jpg
!sample*.png

# Compressed files
*.zip
*.rar
*.tar
*.tar.gz
*.tar.bz2
*.7z

# System files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Backup files
*.bak
*.backup
*~

# Editor temporary files
*.swp
*.swo
*~

# Local environment variables
.env.local
.env.development.local
.env.test.local
.env.production.local

# Requirements files (keep the clean ones)
requirements_original.txt
requirements_old.txt

# Project specific ignores
# ========================

# DIBCO evaluation results
DIBCO_results/
dibco_results/

# KHATT dataset specific
KHATT_results/
khatt_results/

# Generated distorted images
distorted/
distorted_images/

# Preprocessed data
preprocessed/
processed/

# Cache directories
.cache/
cache/
__cache__/
